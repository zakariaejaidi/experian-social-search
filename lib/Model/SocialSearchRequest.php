<?php
/**
 * SocialSearchRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Social Search
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.1.0.3
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * SocialSearchRequest Class Doc Comment
 *
 * @category Class
 * @description Social Search Request Body
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SocialSearchRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'socialSearchRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'ssn' => '\OpenAPI\Client\Model\SSN[]',
        'driverslicense' => '\OpenAPI\Client\Model\DriverLicense',
        'phone' => '\OpenAPI\Client\Model\Phone[]',
        'requestor' => '\OpenAPI\Client\Model\Requestor',
        'permissible_purpose' => '\OpenAPI\Client\Model\PermissiblePurpose',
        'vendor_data' => '\OpenAPI\Client\Model\VendorData',
        'reseller_info' => '\OpenAPI\Client\Model\Reseller',
        'add_ons' => '\OpenAPI\Client\Model\Addons'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'ssn' => null,
        'driverslicense' => null,
        'phone' => null,
        'requestor' => null,
        'permissible_purpose' => null,
        'vendor_data' => null,
        'reseller_info' => null,
        'add_ons' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ssn' => 'ssn',
        'driverslicense' => 'driverslicense',
        'phone' => 'phone',
        'requestor' => 'requestor',
        'permissible_purpose' => 'permissiblePurpose',
        'vendor_data' => 'vendorData',
        'reseller_info' => 'resellerInfo',
        'add_ons' => 'addOns'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ssn' => 'setSsn',
        'driverslicense' => 'setDriverslicense',
        'phone' => 'setPhone',
        'requestor' => 'setRequestor',
        'permissible_purpose' => 'setPermissiblePurpose',
        'vendor_data' => 'setVendorData',
        'reseller_info' => 'setResellerInfo',
        'add_ons' => 'setAddOns'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ssn' => 'getSsn',
        'driverslicense' => 'getDriverslicense',
        'phone' => 'getPhone',
        'requestor' => 'getRequestor',
        'permissible_purpose' => 'getPermissiblePurpose',
        'vendor_data' => 'getVendorData',
        'reseller_info' => 'getResellerInfo',
        'add_ons' => 'getAddOns'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ssn'] = isset($data['ssn']) ? $data['ssn'] : null;
        $this->container['driverslicense'] = isset($data['driverslicense']) ? $data['driverslicense'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['requestor'] = isset($data['requestor']) ? $data['requestor'] : null;
        $this->container['permissible_purpose'] = isset($data['permissible_purpose']) ? $data['permissible_purpose'] : null;
        $this->container['vendor_data'] = isset($data['vendor_data']) ? $data['vendor_data'] : null;
        $this->container['reseller_info'] = isset($data['reseller_info']) ? $data['reseller_info'] : null;
        $this->container['add_ons'] = isset($data['add_ons']) ? $data['add_ons'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ssn
     *
     * @return \OpenAPI\Client\Model\SSN[]|null
     */
    public function getSsn()
    {
        return $this->container['ssn'];
    }

    /**
     * Sets ssn
     *
     * @param \OpenAPI\Client\Model\SSN[]|null $ssn ssn
     *
     * @return $this
     */
    public function setSsn($ssn)
    {
        $this->container['ssn'] = $ssn;

        return $this;
    }

    /**
     * Gets driverslicense
     *
     * @return \OpenAPI\Client\Model\DriverLicense|null
     */
    public function getDriverslicense()
    {
        return $this->container['driverslicense'];
    }

    /**
     * Sets driverslicense
     *
     * @param \OpenAPI\Client\Model\DriverLicense|null $driverslicense driverslicense
     *
     * @return $this
     */
    public function setDriverslicense($driverslicense)
    {
        $this->container['driverslicense'] = $driverslicense;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return \OpenAPI\Client\Model\Phone[]|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param \OpenAPI\Client\Model\Phone[]|null $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets requestor
     *
     * @return \OpenAPI\Client\Model\Requestor|null
     */
    public function getRequestor()
    {
        return $this->container['requestor'];
    }

    /**
     * Sets requestor
     *
     * @param \OpenAPI\Client\Model\Requestor|null $requestor requestor
     *
     * @return $this
     */
    public function setRequestor($requestor)
    {
        $this->container['requestor'] = $requestor;

        return $this;
    }

    /**
     * Gets permissible_purpose
     *
     * @return \OpenAPI\Client\Model\PermissiblePurpose|null
     */
    public function getPermissiblePurpose()
    {
        return $this->container['permissible_purpose'];
    }

    /**
     * Sets permissible_purpose
     *
     * @param \OpenAPI\Client\Model\PermissiblePurpose|null $permissible_purpose permissible_purpose
     *
     * @return $this
     */
    public function setPermissiblePurpose($permissible_purpose)
    {
        $this->container['permissible_purpose'] = $permissible_purpose;

        return $this;
    }

    /**
     * Gets vendor_data
     *
     * @return \OpenAPI\Client\Model\VendorData|null
     */
    public function getVendorData()
    {
        return $this->container['vendor_data'];
    }

    /**
     * Sets vendor_data
     *
     * @param \OpenAPI\Client\Model\VendorData|null $vendor_data vendor_data
     *
     * @return $this
     */
    public function setVendorData($vendor_data)
    {
        $this->container['vendor_data'] = $vendor_data;

        return $this;
    }

    /**
     * Gets reseller_info
     *
     * @return \OpenAPI\Client\Model\Reseller|null
     */
    public function getResellerInfo()
    {
        return $this->container['reseller_info'];
    }

    /**
     * Sets reseller_info
     *
     * @param \OpenAPI\Client\Model\Reseller|null $reseller_info reseller_info
     *
     * @return $this
     */
    public function setResellerInfo($reseller_info)
    {
        $this->container['reseller_info'] = $reseller_info;

        return $this;
    }

    /**
     * Gets add_ons
     *
     * @return \OpenAPI\Client\Model\Addons|null
     */
    public function getAddOns()
    {
        return $this->container['add_ons'];
    }

    /**
     * Sets add_ons
     *
     * @param \OpenAPI\Client\Model\Addons|null $add_ons add_ons
     *
     * @return $this
     */
    public function setAddOns($add_ons)
    {
        $this->container['add_ons'] = $add_ons;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


